; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 5
; RUN: opt -S -mtriple=riscv32-esp-unknown-elf < %s | FileCheck %s --check-prefix=NOPASS
target datalayout = "e-m:e-p:32:32-i64:64-n32-S128"
target triple = "riscv32-esp-unknown-elf"

define void @test_src16_dst16_variable_size(ptr %a, ptr %b, i32 %size) {
; NOPASS-LABEL: define void @test_src16_dst16_variable_size(
; NOPASS-SAME: ptr [[A:%.*]], ptr [[B:%.*]], i32 [[SIZE:%.*]]) {
; NOPASS-NEXT:  [[ENTRY:.*:]]
; NOPASS-NEXT:    tail call void @llvm.memcpy.p0.p0.i32(ptr noundef nonnull align 16 [[A]], ptr noundef nonnull align 16 [[B]], i32 [[SIZE]], i1 false)
; NOPASS-NEXT:    ret void
;
entry:
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef nonnull align 16 %a, ptr noundef nonnull align 16 %b, i32 %size, i1 false)
  ret void
}

define void @test_src16_dst8_variable_size(ptr %a, ptr %b, i32 %size) {
; NOPASS-LABEL: define void @test_src16_dst8_variable_size(
; NOPASS-SAME: ptr [[A:%.*]], ptr [[B:%.*]], i32 [[SIZE:%.*]]) {
; NOPASS-NEXT:  [[ENTRY:.*:]]
; NOPASS-NEXT:    tail call void @llvm.memcpy.p0.p0.i32(ptr noundef nonnull align 8 [[A]], ptr noundef nonnull align 16 [[B]], i32 [[SIZE]], i1 false)
; NOPASS-NEXT:    ret void
;
entry:
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef nonnull align 8 %a, ptr noundef nonnull align 16 %b, i32 %size, i1 false)
  ret void
}

define void @test_src8_dst16_variable_size(ptr %a, ptr %b, i32 %size) {
; NOPASS-LABEL: define void @test_src8_dst16_variable_size(
; NOPASS-SAME: ptr [[A:%.*]], ptr [[B:%.*]], i32 [[SIZE:%.*]]) {
; NOPASS-NEXT:  [[ENTRY:.*:]]
; NOPASS-NEXT:    tail call void @llvm.memcpy.p0.p0.i32(ptr noundef nonnull align 16 [[A]], ptr noundef nonnull align 8 [[B]], i32 [[SIZE]], i1 false)
; NOPASS-NEXT:    ret void
;
entry:
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef nonnull align 16 %a, ptr noundef nonnull align 8 %b, i32 %size, i1 false)
  ret void
}

define void @test_src8_dst8_variable_size(ptr %a, ptr %b, i32 %size) {
; NOPASS-LABEL: define void @test_src8_dst8_variable_size(
; NOPASS-SAME: ptr [[A:%.*]], ptr [[B:%.*]], i32 [[SIZE:%.*]]) {
; NOPASS-NEXT:  [[ENTRY:.*:]]
; NOPASS-NEXT:    tail call void @llvm.memcpy.p0.p0.i32(ptr noundef nonnull align 8 [[A]], ptr noundef nonnull align 8 [[B]], i32 [[SIZE]], i1 false)
; NOPASS-NEXT:    ret void
;
entry:
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef nonnull align 8 %a, ptr noundef nonnull align 8 %b, i32 %size, i1 false)
  ret void
}

declare void @llvm.memcpy.p0.p0.i32(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i32, i1 immarg)

