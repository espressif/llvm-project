; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 5
; RUN: llc -mtriple=xtensa < %s \
; RUN:   | FileCheck %s

declare ptr @llvm.frameaddress(i32)
declare ptr @llvm.returnaddress(i32)

define ptr @test_frameaddress_0() nounwind {
; CHECK-LABEL: test_frameaddress_0:
; CHECK:       # %bb.0:
; CHECK-NEXT:    entry a1, 32
; CHECK-NEXT:    mov.n a8, a1
; CHECK-NEXT:    mov.n a2, a1
; CHECK-NEXT:    retw.n
  %frameaddr = call ptr @llvm.frameaddress(i32 0)
  ret ptr %frameaddr
}

define ptr @test_returnaddress_0() nounwind {
; CHECK-LABEL: test_returnaddress_0:
; CHECK:       # %bb.0:
; CHECK-NEXT:    entry a1, 32
; CHECK-NEXT:    mov.n a8, a1
; CHECK-NEXT:    mov.n a2, a0
; CHECK-NEXT:    retw.n
  %retaddr = call ptr @llvm.returnaddress(i32 0)
  ret ptr %retaddr
}

define ptr @test_frameaddress_1() nounwind {
; CHECK-LABEL: test_frameaddress_1:
; CHECK:       # %bb.0:
; CHECK-NEXT:    entry a1, 32
; CHECK-NEXT:    mov.n a8, a1
; CHECK-NEXT:    movi.n a2, 0
; CHECK-NEXT:    retw.n
  %frameaddr = call ptr @llvm.frameaddress(i32 1)
  ret ptr %frameaddr
}

define ptr @test_returnaddress_1() nounwind {
; CHECK-LABEL: test_returnaddress_1:
; CHECK:       # %bb.0:
; CHECK-NEXT:    entry a1, 32
; CHECK-NEXT:    mov.n a8, a1
; CHECK-NEXT:    movi.n a2, 0
; CHECK-NEXT:    retw.n
  %retaddr = call ptr @llvm.returnaddress(i32 1)
  ret ptr %retaddr
}
